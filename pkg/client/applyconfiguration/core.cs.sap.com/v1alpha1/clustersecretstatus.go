/*
SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and clustersecret-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ClusterSecretStatusApplyConfiguration represents an declarative configuration of the ClusterSecretStatus type for use
// with apply.
type ClusterSecretStatusApplyConfiguration struct {
	ObservedGeneration *int64                                     `json:"observedGeneration,omitempty"`
	State              *string                                    `json:"state,omitempty"`
	Conditions         []ClusterSecretConditionApplyConfiguration `json:"conditions,omitempty"`
}

// ClusterSecretStatusApplyConfiguration constructs an declarative configuration of the ClusterSecretStatus type for use with
// apply.
func ClusterSecretStatus() *ClusterSecretStatusApplyConfiguration {
	return &ClusterSecretStatusApplyConfiguration{}
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *ClusterSecretStatusApplyConfiguration) WithObservedGeneration(value int64) *ClusterSecretStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *ClusterSecretStatusApplyConfiguration) WithState(value string) *ClusterSecretStatusApplyConfiguration {
	b.State = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ClusterSecretStatusApplyConfiguration) WithConditions(values ...*ClusterSecretConditionApplyConfiguration) *ClusterSecretStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}
