/*
SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and clustersecret-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ClusterSecretSpecApplyConfiguration represents a declarative configuration of the ClusterSecretSpec type for use
// with apply.
type ClusterSecretSpecApplyConfiguration struct {
	NamespaceSelector *v1.LabelSelectorApplyConfiguration   `json:"namespaceSelector,omitempty"`
	Template          *SecretTemplateSpecApplyConfiguration `json:"template,omitempty"`
}

// ClusterSecretSpecApplyConfiguration constructs a declarative configuration of the ClusterSecretSpec type for use with
// apply.
func ClusterSecretSpec() *ClusterSecretSpecApplyConfiguration {
	return &ClusterSecretSpecApplyConfiguration{}
}

// WithNamespaceSelector sets the NamespaceSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NamespaceSelector field is set to the value of the last call.
func (b *ClusterSecretSpecApplyConfiguration) WithNamespaceSelector(value *v1.LabelSelectorApplyConfiguration) *ClusterSecretSpecApplyConfiguration {
	b.NamespaceSelector = value
	return b
}

// WithTemplate sets the Template field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Template field is set to the value of the last call.
func (b *ClusterSecretSpecApplyConfiguration) WithTemplate(value *SecretTemplateSpecApplyConfiguration) *ClusterSecretSpecApplyConfiguration {
	b.Template = value
	return b
}
