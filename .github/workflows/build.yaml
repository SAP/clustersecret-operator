name: Build artifacts

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

concurrency: build-${{ github.ref }}

env:
  REGISTRY: ghcr.io

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Check that license header boilerplate is correct
      uses: sap/cs-actions/check-go-license-boilerplate@main
      with:
        boilerplate-path: hack/boilerplate.go.txt

    - name: Check that license headers are correct
      uses: sap/cs-actions/check-go-license-headers@main
      with:
        boilerplate-path: hack/boilerplate.go.txt

    - name: Check that generated artifacts are up-to-date
      run: |
        make generate
        echo "Running 'git status' ..."
        if [ -z "$(git status --porcelain)" ]; then
          echo "Generated artifacts are up-to-date."
        else
          >&2 echo "Generated artifacts are not up-to-date; probably 'make generate' was not run before committing."
          exit 1
        fi

    - name: Run tests
      run: |
        go test -count 1 ./...

  build-docker_controller:
    name: Build Docker image (controller)
    runs-on: ubuntu-24.04
    needs: test
    permissions:
      contents: read
    outputs:
      image-archive: image_controller.tar
      image-repository: ${{ steps.prepare-repository-name.outputs.repository }}
      image-tag: ${{ steps.extract-metadata.outputs.version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Prepare repository name
      id: prepare-repository-name
      run: |
        repository=$REGISTRY/${{ github.repository }}/controller
        echo "repository=${repository,,}" >> $GITHUB_OUTPUT

    - name: Extract metadata (tags, labels) for Docker
      id: extract-metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.prepare-repository-name.outputs.repository }}

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        context: .
        file: build/controller/Dockerfile
        cache-from: |
          type=gha,scope=sha-${{ github.sha }}/controller
          type=gha,scope=${{ github.ref_name }}/controller
          type=gha,scope=${{ github.base_ref || 'main' }}/controller
          type=gha,scope=main/controller
        cache-to: |
          type=gha,scope=sha-${{ github.sha }}/controller,mode=max
          type=gha,scope=${{ github.ref_name }}/controller,mode=max
        outputs: |
          type=oci,dest=${{ runner.temp }}/image_controller.tar
        tags: ${{ steps.extract-metadata.outputs.tags }}
        labels: ${{ steps.extract-metadata.outputs.labels }}

    - name: Upload Docker image archive
      uses: actions/upload-artifact@v4
      with:
        name: image_controller.tar
        path: ${{ runner.temp }}/image_controller.tar

  build-docker_webhook:
    name: Build Docker image (webhook)
    runs-on: ubuntu-24.04
    needs: test
    permissions:
      contents: read
    outputs:
      image-archive: image_webhook.tar
      image-repository: ${{ steps.prepare-repository-name.outputs.repository }}
      image-tag: ${{ steps.extract-metadata.outputs.version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Prepare repository name
      id: prepare-repository-name
      run: |
        repository=$REGISTRY/${{ github.repository }}/webhook
        echo "repository=${repository,,}" >> $GITHUB_OUTPUT

    - name: Extract metadata (tags, labels) for Docker
      id: extract-metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.prepare-repository-name.outputs.repository }}

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        context: .
        file: build/webhook/Dockerfile
        cache-from: |
          type=gha,scope=sha-${{ github.sha }}/webhook
          type=gha,scope=${{ github.ref_name }}/webhook
          type=gha,scope=${{ github.base_ref || 'main' }}/webhook
          type=gha,scope=main/webhook
        cache-to: |
          type=gha,scope=sha-${{ github.sha }}/webhook,mode=max
          type=gha,scope=${{ github.ref_name }}/webhook,mode=max
        outputs: |
          type=oci,dest=${{ runner.temp }}/image_webhook.tar
        tags: ${{ steps.extract-metadata.outputs.tags }}
        labels: ${{ steps.extract-metadata.outputs.labels }}

    - name: Upload Docker image archive
      uses: actions/upload-artifact@v4
      with:
        name: image_webhook.tar
        path: ${{ runner.temp }}/image_webhook.tar

